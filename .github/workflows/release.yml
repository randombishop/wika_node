name: Release

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ github-actions ]
  # pull_request:
  #   branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    strategy:
      matrix:
        include:
          # - os: macos-latest
          #   target: x86_64-apple-darwin
          #   suffix: ''
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            suffix: ''
          # - os: windows-latest
          #   target: x86_64-pc-windows-msvc
          #   suffix: .exe
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set-Up
      run: sudo apt install -y cmake pkg-config libssl-dev git build-essential clang libclang-dev curl

    - name: Install Rustup
      run: |
        curl https://sh.rustup.rs -sSf | sh -s -- -y
        source ~/.cargo/env
        rustup default stable
        rustup update nightly
        rustup update stable
        rustup target add wasm32-unknown-unknown --toolchain nightly

    - name: Build
      run: cargo build --verbose --release
  # - name: Run tests
  #     run: cargo test --verbose


    - uses: actions/upload-artifact@master
      with:
        name: wika-node-${{ matrix.target }}
        path: ./target/release/wika-node
        # name: ${{ steps.get_repository_name.outputs.REPOSITORY_NAME }}-${{ matrix.target }}
        # path: ./target/release/${{ steps.get_repository_name.outputs.REPOSITORY_NAME }}${{ matrix.suffix }}

  # check:
  #   # The type of runner that the job will run on
  #   runs-on: ubuntu-20.04

  #   # Steps represent a sequence of tasks that will be executed as part of the job
  #   steps:
  #     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
  #     - uses: actions/checkout@v2

  #     - name: Set-Up
  #       run: sudo apt install -y cmake pkg-config libssl-dev git build-essential clang libclang-dev curl

  #     - name: Install Rustup
  #       run: |
  #         curl https://sh.rustup.rs -sSf | sh -s -- -y
  #         source ~/.cargo/env
  #         rustup default stable
  #         rustup update nightly
  #         rustup update stable
  #         rustup target add wasm32-unknown-unknown --toolchain nightly
  #     - name: Check Build
  #       run: |
  #         SKIP_WASM_BUILD=1 cargo check --release
  #     - name: Check Build for Benchmarking
  #       run: >
  #         pushd node &&
  #         cargo check --features=runtime-benchmarks --release
